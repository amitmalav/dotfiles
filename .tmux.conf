# start window indexing at one instead of zero
set -g base-index 1
set -g pane-base-index 1
# enable 256 colors
set -g default-terminal "screen-256color"
set -g mouse on

unbind C-b
set -g prefix  C-a
# Easy bindings for split
bind    \ split-window -h -c "#{pane_current_path}"
bind    - split-window -v -c "#{pane_current_path}"


#COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg yellow #base02
#set-option -g pane-active-border-fg yellow #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red



#Scroll easily
bind -n M-f copy-mode\; send-keys -X page-down
bind -n M-b copy-mode\; send-keys -X page-up
# bind with no prefix commnds {{{
# hjkl pane resize
bind -n M-C-h resize-pane -L 2
bind -n M-C-j resize-pane -D 2
bind -n M-C-k resize-pane -U 2
bind -n M-C-l resize-pane -R 2
# switch windows alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
# complensate for the lost keys to send actual 'key' do prefix + 'key' ( for tmux in tmux )
bind M-h send-keys 'M-h'
bind M-j send-keys 'M-j'
bind M-k send-keys 'M-k'
bind M-l send-keys 'M-l'
bind M-\ send-keys 'M-\\'
bind M-1 send-keys 'M-1'
bind M-2 send-keys 'M-2'
bind M-3 send-keys 'M-3'
bind M-4 send-keys 'M-4'
bind M-5 send-keys 'M-5'
bind M-6 send-keys 'M-6'
bind M-7 send-keys 'M-7'
bind M-8 send-keys 'M-8'
bind M-9 send-keys 'M-9'
# }}}

#Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# copy paste using tmux
# # Use Shift+Middle-click to select and Shift+Middle-click to paste
# # or copy from keyboard
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "\
    if [ -x /usr/bin/pbcopy ]; then pbcopy; else xclip -i; fi"
bind y   run "tmux show-buffer | if [ -x /usr/bin/pbcopy ]; then pbcopy; else xclip -i; fi"
# or copy from mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "\
    if [ -x /usr/bin/pbcopy ]; then pbcopy; else xclip -i; fi"
